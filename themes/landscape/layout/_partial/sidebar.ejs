<aside id="sidebar" <% if (theme.sidebar==='bottom' ){ %> class="outer" <% } %>>
  <div id="gradient"></div>
  <div class="sidebar-info highlighted" style="display: none">
    <div id="incentive"><b>FREE Angular Security</br>Video Lesson</b> ðŸ”’</div>
    <form class="subscription" method="get" action="https://mailchi.mp/326f35cfb0de/security">
      <input type="submit" href="" value="Watch now!" class="button cta cta-blue"></input>
    </form>
  </div>

  <div class="shake" style="margin: 0 10px; border-top: 2px solid red; display: none;">
    <img src="/assets/heist.jpg" alt="Security Academy" style="width: 100%">
  <div style="text-align: center; background-color: red; color: white; margin-top: -5px; padding: 10px 0;">
      <div style="font-weight: bold; font-size: 1.6em">Security Academy</div>
      <div>12-week coaching program</div>
    </div>
    <div class="counter" id="counter" style="display: none">
      <div class="counter-block" style="display: none;">
        <div id="days">0</div>
        <div class="counter-legend">Days</div>
      </div>
      <div class="counter-block">
        <div id="hours">0</div>
        <div class="counter-legend">Hours</div>
      </div>
      <div class="counter-block">
        <div id="minutes">0</div>
        <div class="counter-legend">Minutes</div>
      </div>
      <div class="counter-block">
        <div id="seconds">0</div>
        <div class="counter-legend">Seconds</div>
      </div>
    </div>
    <div style="background-color: white; padding: 30px 0; text-align: center">
      <a href="/security/?utm_source=sidebar" style="background: #d60153;
      text-decoration: none;
      padding: 12px 14px;
      font-size: 16px;
      font-weight: bold;
      border: none;
      border-radius: 4px;
      width: 100%;
      margin-bottom: 5px;
      cursor: pointer;
      color: #fff;">Join now!</a>
    </div>
  </div>

  <script>
  document.addEventListener('DOMContentLoaded', () => {

    var countDownDate = new Date(Date.UTC(2020, 6, 8, 20, 0, 0)).getTime();

    var x = setInterval(function () {
      var now = new Date().getTime();
      var distance = countDownDate - now;

      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);

      document.getElementById("days").innerHTML = days;
      document.getElementById("hours").innerHTML = hours;
      document.getElementById("minutes").innerHTML = minutes;
      document.getElementById("seconds").innerHTML = seconds;

      if (distance < 0) {
        clearInterval(x);
        document.getElementById("counter").innerHTML = "EXPIRED";
      }
    }, 1000);
  });
</script>

  <div class="sidebar-info" id="sidebar-subscribe">
    <div id="incentive">Join <b>+<span class="odometer" id="sub-count"></span></b> subscribers</br> that receive latest knowledge and news ðŸš€</div>
    <!-- Start AC signup form -->
     <form method="POST" action="https://pietruchabartosz.activehosted.com/proc.php" id="_form_7_" class="_form _form_7 _inline-form subscription" novalidate>
       <input type="hidden" name="u" value="7" />
       <input type="hidden" name="f" value="7" />
       <input type="hidden" name="s" />
       <input type="hidden" name="c" value="0" />
       <input type="hidden" name="m" value="0" />
       <input type="hidden" name="act" value="sub" />
       <input type="hidden" name="v" value="2" />
       <div class="_form-content">
         <div class="_form_element _x95880374 _full_width " >
           <div class="_field-wrapper">
             <input type="text" name="fullname" placeholder="Your name" required/>
           </div>
         </div>
         <div class="_form_element _x85999527 _full_width " >
           <div class="_field-wrapper">
             <input type="text" name="email" placeholder="Your email" required/>
           </div>
         </div>
         <div class="_button-wrapper _full_width">
           <button id="_form_7_submit" class="_submit button cta cta-red" type="submit">
             Subscribe
           </button>
         </div>
         <div class="consent">By clicking the button you agree to receive a newsletter. NO SPAM!</div>
       </div>
     </form><script type="text/javascript">
     window.cfields = [];
     window._show_thank_you = function(id, message, trackcmp_url) {
       var form = document.getElementById('_form_' + id + '_'), thank_you = form.querySelector('._form-thank-you');
       form.querySelector('._form-content').style.display = 'none';
       thank_you.innerHTML = message;
       thank_you.style.display = 'block';
       if (typeof(trackcmp_url) != 'undefined' && trackcmp_url) {
         // Site tracking URL to use after inline form submission.
         _load_script(trackcmp_url);
       }
       if (typeof window._form_callback !== 'undefined') window._form_callback(id);
     };
     window._show_error = function(id, message, html) {
       var form = document.getElementById('_form_' + id + '_'), err = document.createElement('div'), button = form.querySelector('button'), old_error = form.querySelector('._form_error');
       if (old_error) old_error.parentNode.removeChild(old_error);
       err.innerHTML = message;
       err.className = '_error-inner _form_error _no_arrow';
       var wrapper = document.createElement('div');
       wrapper.className = '_form-inner';
       wrapper.appendChild(err);
       button.parentNode.insertBefore(wrapper, button);
       document.querySelector('[id^="_form"][id$="_submit"]').disabled = false;
       if (html) {
         var div = document.createElement('div');
         div.className = '_error-html';
         div.innerHTML = html;
         err.appendChild(div);
       }
     };
     window._load_script = function(url, callback) {
       var head = document.querySelector('head'), script = document.createElement('script'), r = false;
       script.type = 'text/javascript';
       script.charset = 'utf-8';
       script.src = url;
       if (callback) {
         script.onload = script.onreadystatechange = function() {
           if (!r && (!this.readyState || this.readyState == 'complete')) {
             r = true;
             callback();
           }
         };
       }
       head.appendChild(script);
     };
     (function() {
       if (window.location.search.search("excludeform") !== -1) return false;
       var getCookie = function(name) {
         var match = document.cookie.match(new RegExp('(^|; )' + name + '=([^;]+)'));
         return match ? match[2] : null;
       }
       var setCookie = function(name, value) {
         var now = new Date();
         var time = now.getTime();
         var expireTime = time + 1000 * 60 * 60 * 24 * 365;
         now.setTime(expireTime);
         document.cookie = name + '=' + value + '; expires=' + now + ';path=/';
       }
           var addEvent = function(element, event, func) {
         if (element.addEventListener) {
           element.addEventListener(event, func);
         } else {
           var oldFunc = element['on' + event];
           element['on' + event] = function() {
             oldFunc.apply(this, arguments);
             func.apply(this, arguments);
           };
         }
       }
       var _removed = false;
       var form_to_submit = document.getElementById('_form_7_');
       var allInputs = form_to_submit.querySelectorAll('input, select, textarea'), tooltips = [], submitted = false;
     
       var getUrlParam = function(name) {
         var regexStr = '[\?&]' + name + '=([^&#]*)';
         var results = new RegExp(regexStr, 'i').exec(window.location.href);
         return results != undefined ? decodeURIComponent(results[1]) : false;
       };
     
       for (var i = 0; i < allInputs.length; i++) {
         var regexStr = "field\\[(\\d+)\\]";
         var results = new RegExp(regexStr).exec(allInputs[i].name);
         if (results != undefined) {
           allInputs[i].dataset.name = window.cfields[results[1]];
         } else {
           allInputs[i].dataset.name = allInputs[i].name;
         }
         var fieldVal = getUrlParam(allInputs[i].dataset.name);
     
         if (fieldVal) {
           if (allInputs[i].dataset.autofill === "false") {
             continue;
           }
           if (allInputs[i].type == "radio" || allInputs[i].type == "checkbox") {
             if (allInputs[i].value == fieldVal) {
               allInputs[i].checked = true;
             }
           } else {
             allInputs[i].value = fieldVal;
           }
         }
       }
     
       var remove_tooltips = function() {
         for (var i = 0; i < tooltips.length; i++) {
           tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
         }
         tooltips = [];
       };
       var remove_tooltip = function(elem) {
         for (var i = 0; i < tooltips.length; i++) {
           if (tooltips[i].elem === elem) {
             tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
             tooltips.splice(i, 1);
             return;
           }
         }
       };
       var create_tooltip = function(elem, text) {
         var tooltip = document.createElement('div'), arrow = document.createElement('div'), inner = document.createElement('div'), new_tooltip = {};
         if (elem.type != 'radio' && elem.type != 'checkbox') {
           tooltip.className = '_error';
           arrow.className = '_error-arrow';
           inner.className = '_error-inner';
           inner.innerHTML = text;
           tooltip.appendChild(arrow);
           tooltip.appendChild(inner);
           elem.parentNode.appendChild(tooltip);
         } else {
           tooltip.className = '_error-inner _no_arrow';
           tooltip.innerHTML = text;
           elem.parentNode.insertBefore(tooltip, elem);
           new_tooltip.no_arrow = true;
         }
         new_tooltip.tip = tooltip;
         new_tooltip.elem = elem;
         tooltips.push(new_tooltip);
         return new_tooltip;
       };
       var resize_tooltip = function(tooltip) {
         var rect = tooltip.elem.getBoundingClientRect();
         var doc = document.documentElement, scrollPosition = rect.top - ((window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0));
         if (scrollPosition < 40) {
           tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _below';
         } else {
           tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _above';
         }
       };
       var resize_tooltips = function() {
         if (_removed) return;
         for (var i = 0; i < tooltips.length; i++) {
           if (!tooltips[i].no_arrow) resize_tooltip(tooltips[i]);
         }
       };
       var validate_field = function(elem, remove) {
         var tooltip = null, value = elem.value, no_error = true;
         remove ? remove_tooltip(elem) : false;
         if (elem.type != 'checkbox') elem.className = elem.className.replace(/ ?_has_error ?/g, '');
         if (elem.getAttribute('required') !== null) {
           if (elem.type == 'radio' || (elem.type == 'checkbox' && /any/.test(elem.className))) {
             var elems = form_to_submit.elements[elem.name];
             if (!(elems instanceof NodeList || elems instanceof HTMLCollection) || elems.length <= 1) {
               no_error = elem.checked;
             }
             else {
               no_error = false;
               for (var i = 0; i < elems.length; i++) {
                 if (elems[i].checked) no_error = true;
               }
             }
             if (!no_error) {
               tooltip = create_tooltip(elem, "Please select an option.");
             }
           } else if (elem.type =='checkbox') {
             var elems = form_to_submit.elements[elem.name], found = false, err = [];
             no_error = true;
             for (var i = 0; i < elems.length; i++) {
               if (elems[i].getAttribute('required') === null) continue;
               if (!found && elems[i] !== elem) return true;
               found = true;
               elems[i].className = elems[i].className.replace(/ ?_has_error ?/g, '');
               if (!elems[i].checked) {
                 no_error = false;
                 elems[i].className = elems[i].className + ' _has_error';
                 err.push("Checking %s is required".replace("%s", elems[i].value));
               }
             }
             if (!no_error) {
               tooltip = create_tooltip(elem, err.join('<br/>'));
             }
           } else if (elem.tagName == 'SELECT') {
             var selected = true;
             if (elem.multiple) {
               selected = false;
               for (var i = 0; i < elem.options.length; i++) {
                 if (elem.options[i].selected) {
                   selected = true;
                   break;
                 }
               }
             } else {
               for (var i = 0; i < elem.options.length; i++) {
                 if (elem.options[i].selected && !elem.options[i].value) {
                   selected = false;
                 }
               }
             }
             if (!selected) {
               elem.className = elem.className + ' _has_error';
               no_error = false;
               tooltip = create_tooltip(elem, "Please select an option.");
             }
           } else if (value === undefined || value === null || value === '') {
             elem.className = elem.className + ' _has_error';
             no_error = false;
             tooltip = create_tooltip(elem, "This field is required.");
           }
         }
         if (no_error && elem.name == 'email') {
           if (!value.match(/^[\+_a-z0-9-'&=]+(\.[\+_a-z0-9-']+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,})$/i)) {
             elem.className = elem.className + ' _has_error';
             no_error = false;
             tooltip = create_tooltip(elem, "Enter a valid email address.");
           }
         }
         if (no_error && /date_field/.test(elem.className)) {
           if (!value.match(/^\d\d\d\d-\d\d-\d\d$/)) {
             elem.className = elem.className + ' _has_error';
             no_error = false;
             tooltip = create_tooltip(elem, "Enter a valid date.");
           }
         }
         tooltip ? resize_tooltip(tooltip) : false;
         return no_error;
       };
       var needs_validate = function(el) {
             if(el.getAttribute('required') !== null){
                 return true
             }
             if(el.name === 'email' && el.value !== ""){
                 return true
             }
             return false
       };
       var validate_form = function(e) {
         var err = form_to_submit.querySelector('._form_error'), no_error = true;
         if (!submitted) {
           submitted = true;
           for (var i = 0, len = allInputs.length; i < len; i++) {
             var input = allInputs[i];
             if (needs_validate(input)) {
               if (input.type == 'text') {
                 addEvent(input, 'blur', function() {
                   this.value = this.value.trim();
                   validate_field(this, true);
                 });
                 addEvent(input, 'input', function() {
                   validate_field(this, true);
                 });
               } else if (input.type == 'radio' || input.type == 'checkbox') {
                 (function(el) {
                   var radios = form_to_submit.elements[el.name];
                   for (var i = 0; i < radios.length; i++) {
                     addEvent(radios[i], 'click', function() {
                       validate_field(el, true);
                     });
                   }
                 })(input);
               } else if (input.tagName == 'SELECT') {
                 addEvent(input, 'change', function() {
                   validate_field(this, true);
                 });
               } else if (input.type == 'textarea'){
                 addEvent(input, 'input', function() {
                   validate_field(this, true);
                 });
               }
             }
           }
         }
         remove_tooltips();
         for (var i = 0, len = allInputs.length; i < len; i++) {
           var elem = allInputs[i];
           if (needs_validate(elem)) {
             if (elem.tagName.toLowerCase() !== "select") {
               elem.value = elem.value.trim();
             }
             validate_field(elem) ? true : no_error = false;
           }
         }
         if (!no_error && e) {
           e.preventDefault();
         }
         resize_tooltips();
         return no_error;
       };
       addEvent(window, 'resize', resize_tooltips);
       addEvent(window, 'scroll', resize_tooltips);
       window._old_serialize = null;
       if (typeof serialize !== 'undefined') window._old_serialize = window.serialize;
       _load_script("//d3rxaij56vjege.cloudfront.net/form-serialize/0.3/serialize.min.js", function() {
         window._form_serialize = window.serialize;
         if (window._old_serialize) window.serialize = window._old_serialize;
       });
       var form_submit = function(e) {
         e.preventDefault();
         if (validate_form()) {
           // use this trick to get the submit button & disable it using plain javascript
           document.querySelector('#_form_7_submit').disabled = true;
                 var serialized = _form_serialize(document.getElementById('_form_7_'));
           var err = form_to_submit.querySelector('._form_error');
           err ? err.parentNode.removeChild(err) : false;
           _load_script('https://pietruchabartosz.activehosted.com/proc.php?' + serialized + '&jsonp=true');
         }
         return false;
       };
       addEvent(form_to_submit, 'submit', form_submit);
     })();
     </script>
    <!-- End AC signup form -->
  </div>

  <div style="width: 100%; text-align: center; display: none">
    <div style="font-size: 25px; font-weight: bold; color: red; margin-bottom: 10px;">OFFER CLOSES IN</div>
    <img src="http://s.mmgo.io/t/BkWw" />
  </div>
  <a href="/security" style="text-align: center; display: none">
    <img src="/assets/bf.gif" style="width: 90%">
  </a>

  <div id="space"></div>
  <div id="author">
    <img src="<%- url_for('assets') %>/bartosz.jpg" alt="Author">
    <div id="author-details">
      <div id="name">Bartosz Pietrucha</div>
      <div id="desc">Angular Academy founder, software consultant, trainer, international speaker</div>
      <a href="https://twitter.com/pietrucha?ref_src=twsrc%5Etfw" class="twitter-follow-button" data-show-count="false"
        data-size="large">
        Follow @pietrucha
      </a>
    </div>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
  </div>
</aside>